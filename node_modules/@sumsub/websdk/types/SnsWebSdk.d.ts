import type { SnsWebSdkOptions, SnsWebSdkCallbacks, SnsWebSdkBaseConfig, SnsWebSdkReusableConfig } from './types';
export interface SnsWebSdkLaunchConfig extends SnsWebSdkBaseConfig {
    accessToken: string;
    flowName?: string;
    packageVersion?: string;
    reusableConfig?: SnsWebSdkReusableConfig | null;
}
export default class SnsWebSdk {
    private baseUrl;
    private config;
    private options;
    private callbacks;
    private iframe;
    private iframeId;
    private sessionId;
    private $container;
    private initialized;
    private scrollPosition;
    private scrollElement;
    constructor(baseUrl: string | undefined, config: SnsWebSdkLaunchConfig, callbacks: SnsWebSdkCallbacks, options: SnsWebSdkOptions);
    getVersion(): string;
    getCurrentBaseUrl(baseUrl: string, accessToken: string): string;
    getIframeId(): string;
    launch(containerSelectorOrElement: string | HTMLElement): void;
    private addViewportTag;
    private createIframe;
    private getIframeSrc;
    private onMessage;
    private registerEventListener;
    private onSdkMessage;
    private callExpirationHandler;
    private updateAccessTokenOrReinitialize;
    private getScrolledElement;
    private getScrollPosition;
    private restoreScrollPosition;
    private scrollTo;
    private updateAccessToken;
    destroy(): void;
    navigateBack(): void;
    singleStepNext(step: string): void;
    setLanguage(language: string): void;
    setTheme(theme: string): void;
}
