import SnsWebSdk from './SnsWebSdk';
import type { SnsWebSdkOptions, LegacyExpirationHandler, SnsWebSdkBaseConfig, ErrorHandler, MessageHandler, SnsWebSdkReusableConfig } from './types';
interface SnsWebSdkConfig extends SnsWebSdkBaseConfig {
    onError?: ErrorHandler;
    onMessage?: MessageHandler;
}
export default class Builder {
    private baseUrl;
    private flowName?;
    private debugEnabled;
    private options;
    private config;
    private reusableConfig;
    private accessToken;
    private expirationHandler;
    constructor(baseUrl: string, flowName?: string);
    withAccessToken(accessToken: string, expirationHandler: LegacyExpirationHandler): this;
    debug(debug: boolean): this;
    withOptions(options: Partial<SnsWebSdkOptions>): this;
    withConf(config: SnsWebSdkConfig): this;
    withReusableKycConf(reusableConfig: SnsWebSdkReusableConfig): this;
    build(): SnsWebSdk;
}
export {};
